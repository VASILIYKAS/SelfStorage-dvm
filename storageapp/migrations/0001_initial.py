# Generated by Django 5.2.4 on 2025-07-26 12:19

import django.core.validators
import django.db.models.deletion
import phonenumber_field.modelfields
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Storage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('location', models.CharField(default='', max_length=100, verbose_name='Город')),
                ('adress', models.CharField(default='', max_length=100, verbose_name='Адрес')),
                ('available_boxes_count', models.IntegerField(default=0, validators=[django.core.validators.MaxValueValidator(100), django.core.validators.MinValueValidator(1)], verbose_name='Боксов свободно')),
                ('total_boxes_count', models.IntegerField(default=1, validators=[django.core.validators.MaxValueValidator(100), django.core.validators.MinValueValidator(1)], verbose_name='Всего боксов')),
                ('temperature', models.IntegerField(default=1, verbose_name='Температура')),
                ('image', models.ImageField(blank=True, null=True, upload_to='storage_images/', verbose_name='Изображение склада')),
                ('height', models.IntegerField(default=1, verbose_name='Высота')),
            ],
        ),
        migrations.CreateModel(
            name='StorageUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('photo', models.ImageField(blank=True, null=True, upload_to='storage_images/', verbose_name='Фото')),
                ('first_name', models.CharField(max_length=50, verbose_name='Имя')),
                ('last_name', models.CharField(max_length=50, verbose_name='Фамилия')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='адрес почты')),
                ('date_joined', models.DateTimeField(auto_now_add=True)),
                ('phone_number', phonenumber_field.modelfields.PhoneNumberField(help_text='Номер телефона клиента', max_length=128, region=None, verbose_name='Номер телефона')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Box',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.CharField(unique=True, verbose_name='Номер бокса')),
                ('area', models.IntegerField(verbose_name='Площадь')),
                ('length', models.DecimalField(decimal_places=2, max_digits=4, verbose_name='Длина')),
                ('width', models.DecimalField(decimal_places=2, max_digits=4, verbose_name='Ширина')),
                ('height', models.DecimalField(decimal_places=2, max_digits=4, verbose_name='Высота')),
                ('floor', models.IntegerField(default=0, verbose_name='Этаж')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Цена')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='user_boxes', to=settings.AUTH_USER_MODEL, verbose_name='Клиенты')),
                ('storage', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='boxes', to='storageapp.storage', verbose_name='Склады')),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('В процессе', 'В процессе'), ('Завершен', 'Завершен'), ('Отменен', 'Отменен'), ('Доставка', 'Доставка')], default='В процессе', max_length=100, verbose_name='Статус')),
                ('rental_start_date', models.DateTimeField(verbose_name='Дата начала заказа')),
                ('end_rental_date', models.DateField(verbose_name='Дата окончания заказа')),
                ('self_delivery', models.BooleanField(default=False)),
                ('box', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='orders', to='storageapp.box', verbose_name='Арендованный бокс')),
                ('storage_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='orders', to=settings.AUTH_USER_MODEL, verbose_name='Клиенты')),
            ],
        ),
        migrations.CreateModel(
            name='UserItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('area', models.IntegerField(verbose_name='Площадь')),
                ('length', models.DecimalField(decimal_places=2, max_digits=4, verbose_name='Длина')),
                ('width', models.DecimalField(decimal_places=2, max_digits=4, verbose_name='Ширина')),
                ('height', models.DecimalField(decimal_places=2, max_digits=4, verbose_name='Высота')),
                ('items', models.CharField(verbose_name='')),
                ('boxes', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='box_items', to='storageapp.box', verbose_name='Вещи ячейки')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='user_items', to=settings.AUTH_USER_MODEL, verbose_name='Вещи Клиента')),
            ],
        ),
    ]
